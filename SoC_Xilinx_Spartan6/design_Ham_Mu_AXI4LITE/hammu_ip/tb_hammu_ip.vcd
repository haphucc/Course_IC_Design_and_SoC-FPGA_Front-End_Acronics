$date
	Sun Jul 13 03:11:21 2025
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module tb_hammu_ip $end
$var parameter 32 ! ADDR_X $end
$var parameter 32 " ADDR_A $end
$var parameter 32 # ADDR_START $end
$var parameter 32 $ ADDR_P $end
$var parameter 32 % ADDR_DONE $end
$var reg 1 & S_AXI_ACLK $end
$var reg 1 ' S_AXI_ARESETN $end
$var reg 32 ( S_AXI_ARADDR [31:0] $end
$var reg 1 ) S_AXI_ARVALID $end
$var wire 1 * S_AXI_ARREADY $end
$var reg 1 + S_AXI_RREADY $end
$var wire 1 , S_AXI_RDATA [31] $end
$var wire 1 - S_AXI_RDATA [30] $end
$var wire 1 . S_AXI_RDATA [29] $end
$var wire 1 / S_AXI_RDATA [28] $end
$var wire 1 0 S_AXI_RDATA [27] $end
$var wire 1 1 S_AXI_RDATA [26] $end
$var wire 1 2 S_AXI_RDATA [25] $end
$var wire 1 3 S_AXI_RDATA [24] $end
$var wire 1 4 S_AXI_RDATA [23] $end
$var wire 1 5 S_AXI_RDATA [22] $end
$var wire 1 6 S_AXI_RDATA [21] $end
$var wire 1 7 S_AXI_RDATA [20] $end
$var wire 1 8 S_AXI_RDATA [19] $end
$var wire 1 9 S_AXI_RDATA [18] $end
$var wire 1 : S_AXI_RDATA [17] $end
$var wire 1 ; S_AXI_RDATA [16] $end
$var wire 1 < S_AXI_RDATA [15] $end
$var wire 1 = S_AXI_RDATA [14] $end
$var wire 1 > S_AXI_RDATA [13] $end
$var wire 1 ? S_AXI_RDATA [12] $end
$var wire 1 @ S_AXI_RDATA [11] $end
$var wire 1 A S_AXI_RDATA [10] $end
$var wire 1 B S_AXI_RDATA [9] $end
$var wire 1 C S_AXI_RDATA [8] $end
$var wire 1 D S_AXI_RDATA [7] $end
$var wire 1 E S_AXI_RDATA [6] $end
$var wire 1 F S_AXI_RDATA [5] $end
$var wire 1 G S_AXI_RDATA [4] $end
$var wire 1 H S_AXI_RDATA [3] $end
$var wire 1 I S_AXI_RDATA [2] $end
$var wire 1 J S_AXI_RDATA [1] $end
$var wire 1 K S_AXI_RDATA [0] $end
$var wire 1 L S_AXI_RVALID $end
$var wire 1 M S_AXI_RRESP [1] $end
$var wire 1 N S_AXI_RRESP [0] $end
$var reg 32 O S_AXI_AWADDR [31:0] $end
$var reg 1 P S_AXI_AWVALID $end
$var wire 1 Q S_AXI_AWREADY $end
$var reg 32 R S_AXI_WDATA [31:0] $end
$var reg 4 S S_AXI_WSTRB [3:0] $end
$var reg 1 T S_AXI_WVALID $end
$var wire 1 U S_AXI_WREADY $end
$var reg 1 V S_AXI_BREADY $end
$var wire 1 W S_AXI_BVALID $end
$var wire 1 X S_AXI_BRESP [1] $end
$var wire 1 Y S_AXI_BRESP [0] $end

$scope task axi_write $end
$var reg 32 Z addr [31:0] $end
$var reg 32 [ data [31:0] $end
$upscope $end

$scope task axi_read $end
$var reg 32 \ addr [31:0] $end
$var reg 32 ] data [31:0] $end
$upscope $end

$scope task test_exponent $end
$var reg 4 ^ x_val [3:0] $end
$var reg 4 _ a_val [3:0] $end
$var reg 15 ` expected [14:0] $end
$var reg 32 a read_data [31:0] $end
$upscope $end

$scope module DUT $end
$var parameter 32 b C_S_AXI_DATA_WIDTH $end
$var parameter 32 c C_S_AXI_ADDR_WIDTH $end
$var parameter 32 d C_S_AXI_MIN_SIZE $end
$var parameter 32 e C_USE_WSTRB $end
$var parameter 32 f C_DPHASE_TIMEOUT $end
$var parameter 32 g C_BASEADDR $end
$var parameter 32 h C_HIGHADDR $end
$var parameter 64 i C_FAMILY $end
$var parameter 32 j C_NUM_REG $end
$var parameter 32 k C_NUM_MEM $end
$var parameter 32 l C_SLV_AWIDTH $end
$var parameter 32 m C_SLV_DWIDTH $end
$var wire 1 n S_AXI_ACLK $end
$var wire 1 o S_AXI_ARESETN $end
$var wire 1 p S_AXI_AWADDR [31] $end
$var wire 1 q S_AXI_AWADDR [30] $end
$var wire 1 r S_AXI_AWADDR [29] $end
$var wire 1 s S_AXI_AWADDR [28] $end
$var wire 1 t S_AXI_AWADDR [27] $end
$var wire 1 u S_AXI_AWADDR [26] $end
$var wire 1 v S_AXI_AWADDR [25] $end
$var wire 1 w S_AXI_AWADDR [24] $end
$var wire 1 x S_AXI_AWADDR [23] $end
$var wire 1 y S_AXI_AWADDR [22] $end
$var wire 1 z S_AXI_AWADDR [21] $end
$var wire 1 { S_AXI_AWADDR [20] $end
$var wire 1 | S_AXI_AWADDR [19] $end
$var wire 1 } S_AXI_AWADDR [18] $end
$var wire 1 ~ S_AXI_AWADDR [17] $end
$var wire 1 !! S_AXI_AWADDR [16] $end
$var wire 1 "! S_AXI_AWADDR [15] $end
$var wire 1 #! S_AXI_AWADDR [14] $end
$var wire 1 $! S_AXI_AWADDR [13] $end
$var wire 1 %! S_AXI_AWADDR [12] $end
$var wire 1 &! S_AXI_AWADDR [11] $end
$var wire 1 '! S_AXI_AWADDR [10] $end
$var wire 1 (! S_AXI_AWADDR [9] $end
$var wire 1 )! S_AXI_AWADDR [8] $end
$var wire 1 *! S_AXI_AWADDR [7] $end
$var wire 1 +! S_AXI_AWADDR [6] $end
$var wire 1 ,! S_AXI_AWADDR [5] $end
$var wire 1 -! S_AXI_AWADDR [4] $end
$var wire 1 .! S_AXI_AWADDR [3] $end
$var wire 1 /! S_AXI_AWADDR [2] $end
$var wire 1 0! S_AXI_AWADDR [1] $end
$var wire 1 1! S_AXI_AWADDR [0] $end
$var wire 1 2! S_AXI_AWVALID $end
$var wire 1 3! S_AXI_WDATA [31] $end
$var wire 1 4! S_AXI_WDATA [30] $end
$var wire 1 5! S_AXI_WDATA [29] $end
$var wire 1 6! S_AXI_WDATA [28] $end
$var wire 1 7! S_AXI_WDATA [27] $end
$var wire 1 8! S_AXI_WDATA [26] $end
$var wire 1 9! S_AXI_WDATA [25] $end
$var wire 1 :! S_AXI_WDATA [24] $end
$var wire 1 ;! S_AXI_WDATA [23] $end
$var wire 1 <! S_AXI_WDATA [22] $end
$var wire 1 =! S_AXI_WDATA [21] $end
$var wire 1 >! S_AXI_WDATA [20] $end
$var wire 1 ?! S_AXI_WDATA [19] $end
$var wire 1 @! S_AXI_WDATA [18] $end
$var wire 1 A! S_AXI_WDATA [17] $end
$var wire 1 B! S_AXI_WDATA [16] $end
$var wire 1 C! S_AXI_WDATA [15] $end
$var wire 1 D! S_AXI_WDATA [14] $end
$var wire 1 E! S_AXI_WDATA [13] $end
$var wire 1 F! S_AXI_WDATA [12] $end
$var wire 1 G! S_AXI_WDATA [11] $end
$var wire 1 H! S_AXI_WDATA [10] $end
$var wire 1 I! S_AXI_WDATA [9] $end
$var wire 1 J! S_AXI_WDATA [8] $end
$var wire 1 K! S_AXI_WDATA [7] $end
$var wire 1 L! S_AXI_WDATA [6] $end
$var wire 1 M! S_AXI_WDATA [5] $end
$var wire 1 N! S_AXI_WDATA [4] $end
$var wire 1 O! S_AXI_WDATA [3] $end
$var wire 1 P! S_AXI_WDATA [2] $end
$var wire 1 Q! S_AXI_WDATA [1] $end
$var wire 1 R! S_AXI_WDATA [0] $end
$var wire 1 S! S_AXI_WSTRB [3] $end
$var wire 1 T! S_AXI_WSTRB [2] $end
$var wire 1 U! S_AXI_WSTRB [1] $end
$var wire 1 V! S_AXI_WSTRB [0] $end
$var wire 1 W! S_AXI_WVALID $end
$var wire 1 X! S_AXI_ARADDR [31] $end
$var wire 1 Y! S_AXI_ARADDR [30] $end
$var wire 1 Z! S_AXI_ARADDR [29] $end
$var wire 1 [! S_AXI_ARADDR [28] $end
$var wire 1 \! S_AXI_ARADDR [27] $end
$var wire 1 ]! S_AXI_ARADDR [26] $end
$var wire 1 ^! S_AXI_ARADDR [25] $end
$var wire 1 _! S_AXI_ARADDR [24] $end
$var wire 1 `! S_AXI_ARADDR [23] $end
$var wire 1 a! S_AXI_ARADDR [22] $end
$var wire 1 b! S_AXI_ARADDR [21] $end
$var wire 1 c! S_AXI_ARADDR [20] $end
$var wire 1 d! S_AXI_ARADDR [19] $end
$var wire 1 e! S_AXI_ARADDR [18] $end
$var wire 1 f! S_AXI_ARADDR [17] $end
$var wire 1 g! S_AXI_ARADDR [16] $end
$var wire 1 h! S_AXI_ARADDR [15] $end
$var wire 1 i! S_AXI_ARADDR [14] $end
$var wire 1 j! S_AXI_ARADDR [13] $end
$var wire 1 k! S_AXI_ARADDR [12] $end
$var wire 1 l! S_AXI_ARADDR [11] $end
$var wire 1 m! S_AXI_ARADDR [10] $end
$var wire 1 n! S_AXI_ARADDR [9] $end
$var wire 1 o! S_AXI_ARADDR [8] $end
$var wire 1 p! S_AXI_ARADDR [7] $end
$var wire 1 q! S_AXI_ARADDR [6] $end
$var wire 1 r! S_AXI_ARADDR [5] $end
$var wire 1 s! S_AXI_ARADDR [4] $end
$var wire 1 t! S_AXI_ARADDR [3] $end
$var wire 1 u! S_AXI_ARADDR [2] $end
$var wire 1 v! S_AXI_ARADDR [1] $end
$var wire 1 w! S_AXI_ARADDR [0] $end
$var wire 1 x! S_AXI_ARVALID $end
$var wire 1 y! S_AXI_RREADY $end
$var wire 1 z! S_AXI_BREADY $end
$var wire 1 Q S_AXI_AWREADY $end
$var wire 1 U S_AXI_WREADY $end
$var wire 1 W S_AXI_BVALID $end
$var wire 1 * S_AXI_ARREADY $end
$var wire 1 , S_AXI_RDATA [31] $end
$var wire 1 - S_AXI_RDATA [30] $end
$var wire 1 . S_AXI_RDATA [29] $end
$var wire 1 / S_AXI_RDATA [28] $end
$var wire 1 0 S_AXI_RDATA [27] $end
$var wire 1 1 S_AXI_RDATA [26] $end
$var wire 1 2 S_AXI_RDATA [25] $end
$var wire 1 3 S_AXI_RDATA [24] $end
$var wire 1 4 S_AXI_RDATA [23] $end
$var wire 1 5 S_AXI_RDATA [22] $end
$var wire 1 6 S_AXI_RDATA [21] $end
$var wire 1 7 S_AXI_RDATA [20] $end
$var wire 1 8 S_AXI_RDATA [19] $end
$var wire 1 9 S_AXI_RDATA [18] $end
$var wire 1 : S_AXI_RDATA [17] $end
$var wire 1 ; S_AXI_RDATA [16] $end
$var wire 1 < S_AXI_RDATA [15] $end
$var wire 1 = S_AXI_RDATA [14] $end
$var wire 1 > S_AXI_RDATA [13] $end
$var wire 1 ? S_AXI_RDATA [12] $end
$var wire 1 @ S_AXI_RDATA [11] $end
$var wire 1 A S_AXI_RDATA [10] $end
$var wire 1 B S_AXI_RDATA [9] $end
$var wire 1 C S_AXI_RDATA [8] $end
$var wire 1 D S_AXI_RDATA [7] $end
$var wire 1 E S_AXI_RDATA [6] $end
$var wire 1 F S_AXI_RDATA [5] $end
$var wire 1 G S_AXI_RDATA [4] $end
$var wire 1 H S_AXI_RDATA [3] $end
$var wire 1 I S_AXI_RDATA [2] $end
$var wire 1 J S_AXI_RDATA [1] $end
$var wire 1 K S_AXI_RDATA [0] $end
$var wire 1 L S_AXI_RVALID $end
$var wire 1 X S_AXI_BRESP [1] $end
$var wire 1 Y S_AXI_BRESP [0] $end
$var wire 1 M S_AXI_RRESP [1] $end
$var wire 1 N S_AXI_RRESP [0] $end
$var wire 1 {! internal_awaddr [31] $end
$var wire 1 |! internal_awaddr [30] $end
$var wire 1 }! internal_awaddr [29] $end
$var wire 1 ~! internal_awaddr [28] $end
$var wire 1 !" internal_awaddr [27] $end
$var wire 1 "" internal_awaddr [26] $end
$var wire 1 #" internal_awaddr [25] $end
$var wire 1 $" internal_awaddr [24] $end
$var wire 1 %" internal_awaddr [23] $end
$var wire 1 &" internal_awaddr [22] $end
$var wire 1 '" internal_awaddr [21] $end
$var wire 1 (" internal_awaddr [20] $end
$var wire 1 )" internal_awaddr [19] $end
$var wire 1 *" internal_awaddr [18] $end
$var wire 1 +" internal_awaddr [17] $end
$var wire 1 ," internal_awaddr [16] $end
$var wire 1 -" internal_awaddr [15] $end
$var wire 1 ." internal_awaddr [14] $end
$var wire 1 /" internal_awaddr [13] $end
$var wire 1 0" internal_awaddr [12] $end
$var wire 1 1" internal_awaddr [11] $end
$var wire 1 2" internal_awaddr [10] $end
$var wire 1 3" internal_awaddr [9] $end
$var wire 1 4" internal_awaddr [8] $end
$var wire 1 5" internal_awaddr [7] $end
$var wire 1 6" internal_awaddr [6] $end
$var wire 1 7" internal_awaddr [5] $end
$var wire 1 8" internal_awaddr [4] $end
$var wire 1 9" internal_awaddr [3] $end
$var wire 1 :" internal_awaddr [2] $end
$var wire 1 ;" internal_awaddr [1] $end
$var wire 1 <" internal_awaddr [0] $end
$var wire 1 =" internal_araddr [31] $end
$var wire 1 >" internal_araddr [30] $end
$var wire 1 ?" internal_araddr [29] $end
$var wire 1 @" internal_araddr [28] $end
$var wire 1 A" internal_araddr [27] $end
$var wire 1 B" internal_araddr [26] $end
$var wire 1 C" internal_araddr [25] $end
$var wire 1 D" internal_araddr [24] $end
$var wire 1 E" internal_araddr [23] $end
$var wire 1 F" internal_araddr [22] $end
$var wire 1 G" internal_araddr [21] $end
$var wire 1 H" internal_araddr [20] $end
$var wire 1 I" internal_araddr [19] $end
$var wire 1 J" internal_araddr [18] $end
$var wire 1 K" internal_araddr [17] $end
$var wire 1 L" internal_araddr [16] $end
$var wire 1 M" internal_araddr [15] $end
$var wire 1 N" internal_araddr [14] $end
$var wire 1 O" internal_araddr [13] $end
$var wire 1 P" internal_araddr [12] $end
$var wire 1 Q" internal_araddr [11] $end
$var wire 1 R" internal_araddr [10] $end
$var wire 1 S" internal_araddr [9] $end
$var wire 1 T" internal_araddr [8] $end
$var wire 1 U" internal_araddr [7] $end
$var wire 1 V" internal_araddr [6] $end
$var wire 1 W" internal_araddr [5] $end
$var wire 1 X" internal_araddr [4] $end
$var wire 1 Y" internal_araddr [3] $end
$var wire 1 Z" internal_araddr [2] $end
$var wire 1 [" internal_araddr [1] $end
$var wire 1 \" internal_araddr [0] $end

$scope module exponent_slave_inst $end
$var parameter 32 ]" ADDR_X $end
$var parameter 32 ^" ADDR_A $end
$var parameter 32 _" ADDR_START $end
$var parameter 32 `" ADDR_P $end
$var parameter 32 a" ADDR_DONE $end
$var wire 1 n S_AXI_ACLK $end
$var wire 1 o S_AXI_ARESETN $end
$var wire 1 =" S_AXI_ARADDR [31] $end
$var wire 1 >" S_AXI_ARADDR [30] $end
$var wire 1 ?" S_AXI_ARADDR [29] $end
$var wire 1 @" S_AXI_ARADDR [28] $end
$var wire 1 A" S_AXI_ARADDR [27] $end
$var wire 1 B" S_AXI_ARADDR [26] $end
$var wire 1 C" S_AXI_ARADDR [25] $end
$var wire 1 D" S_AXI_ARADDR [24] $end
$var wire 1 E" S_AXI_ARADDR [23] $end
$var wire 1 F" S_AXI_ARADDR [22] $end
$var wire 1 G" S_AXI_ARADDR [21] $end
$var wire 1 H" S_AXI_ARADDR [20] $end
$var wire 1 I" S_AXI_ARADDR [19] $end
$var wire 1 J" S_AXI_ARADDR [18] $end
$var wire 1 K" S_AXI_ARADDR [17] $end
$var wire 1 L" S_AXI_ARADDR [16] $end
$var wire 1 M" S_AXI_ARADDR [15] $end
$var wire 1 N" S_AXI_ARADDR [14] $end
$var wire 1 O" S_AXI_ARADDR [13] $end
$var wire 1 P" S_AXI_ARADDR [12] $end
$var wire 1 Q" S_AXI_ARADDR [11] $end
$var wire 1 R" S_AXI_ARADDR [10] $end
$var wire 1 S" S_AXI_ARADDR [9] $end
$var wire 1 T" S_AXI_ARADDR [8] $end
$var wire 1 U" S_AXI_ARADDR [7] $end
$var wire 1 V" S_AXI_ARADDR [6] $end
$var wire 1 W" S_AXI_ARADDR [5] $end
$var wire 1 X" S_AXI_ARADDR [4] $end
$var wire 1 Y" S_AXI_ARADDR [3] $end
$var wire 1 Z" S_AXI_ARADDR [2] $end
$var wire 1 [" S_AXI_ARADDR [1] $end
$var wire 1 \" S_AXI_ARADDR [0] $end
$var wire 1 x! S_AXI_ARVALID $end
$var reg 1 b" S_AXI_ARREADY $end
$var wire 1 y! S_AXI_RREADY $end
$var reg 32 c" S_AXI_RDATA [31:0] $end
$var reg 1 d" S_AXI_RVALID $end
$var wire 1 M S_AXI_RRESP [1] $end
$var wire 1 N S_AXI_RRESP [0] $end
$var wire 1 {! S_AXI_AWADDR [31] $end
$var wire 1 |! S_AXI_AWADDR [30] $end
$var wire 1 }! S_AXI_AWADDR [29] $end
$var wire 1 ~! S_AXI_AWADDR [28] $end
$var wire 1 !" S_AXI_AWADDR [27] $end
$var wire 1 "" S_AXI_AWADDR [26] $end
$var wire 1 #" S_AXI_AWADDR [25] $end
$var wire 1 $" S_AXI_AWADDR [24] $end
$var wire 1 %" S_AXI_AWADDR [23] $end
$var wire 1 &" S_AXI_AWADDR [22] $end
$var wire 1 '" S_AXI_AWADDR [21] $end
$var wire 1 (" S_AXI_AWADDR [20] $end
$var wire 1 )" S_AXI_AWADDR [19] $end
$var wire 1 *" S_AXI_AWADDR [18] $end
$var wire 1 +" S_AXI_AWADDR [17] $end
$var wire 1 ," S_AXI_AWADDR [16] $end
$var wire 1 -" S_AXI_AWADDR [15] $end
$var wire 1 ." S_AXI_AWADDR [14] $end
$var wire 1 /" S_AXI_AWADDR [13] $end
$var wire 1 0" S_AXI_AWADDR [12] $end
$var wire 1 1" S_AXI_AWADDR [11] $end
$var wire 1 2" S_AXI_AWADDR [10] $end
$var wire 1 3" S_AXI_AWADDR [9] $end
$var wire 1 4" S_AXI_AWADDR [8] $end
$var wire 1 5" S_AXI_AWADDR [7] $end
$var wire 1 6" S_AXI_AWADDR [6] $end
$var wire 1 7" S_AXI_AWADDR [5] $end
$var wire 1 8" S_AXI_AWADDR [4] $end
$var wire 1 9" S_AXI_AWADDR [3] $end
$var wire 1 :" S_AXI_AWADDR [2] $end
$var wire 1 ;" S_AXI_AWADDR [1] $end
$var wire 1 <" S_AXI_AWADDR [0] $end
$var wire 1 2! S_AXI_AWVALID $end
$var reg 1 e" S_AXI_AWREADY $end
$var wire 1 3! S_AXI_WDATA [31] $end
$var wire 1 4! S_AXI_WDATA [30] $end
$var wire 1 5! S_AXI_WDATA [29] $end
$var wire 1 6! S_AXI_WDATA [28] $end
$var wire 1 7! S_AXI_WDATA [27] $end
$var wire 1 8! S_AXI_WDATA [26] $end
$var wire 1 9! S_AXI_WDATA [25] $end
$var wire 1 :! S_AXI_WDATA [24] $end
$var wire 1 ;! S_AXI_WDATA [23] $end
$var wire 1 <! S_AXI_WDATA [22] $end
$var wire 1 =! S_AXI_WDATA [21] $end
$var wire 1 >! S_AXI_WDATA [20] $end
$var wire 1 ?! S_AXI_WDATA [19] $end
$var wire 1 @! S_AXI_WDATA [18] $end
$var wire 1 A! S_AXI_WDATA [17] $end
$var wire 1 B! S_AXI_WDATA [16] $end
$var wire 1 C! S_AXI_WDATA [15] $end
$var wire 1 D! S_AXI_WDATA [14] $end
$var wire 1 E! S_AXI_WDATA [13] $end
$var wire 1 F! S_AXI_WDATA [12] $end
$var wire 1 G! S_AXI_WDATA [11] $end
$var wire 1 H! S_AXI_WDATA [10] $end
$var wire 1 I! S_AXI_WDATA [9] $end
$var wire 1 J! S_AXI_WDATA [8] $end
$var wire 1 K! S_AXI_WDATA [7] $end
$var wire 1 L! S_AXI_WDATA [6] $end
$var wire 1 M! S_AXI_WDATA [5] $end
$var wire 1 N! S_AXI_WDATA [4] $end
$var wire 1 O! S_AXI_WDATA [3] $end
$var wire 1 P! S_AXI_WDATA [2] $end
$var wire 1 Q! S_AXI_WDATA [1] $end
$var wire 1 R! S_AXI_WDATA [0] $end
$var wire 1 S! S_AXI_WSTRB [3] $end
$var wire 1 T! S_AXI_WSTRB [2] $end
$var wire 1 U! S_AXI_WSTRB [1] $end
$var wire 1 V! S_AXI_WSTRB [0] $end
$var wire 1 W! S_AXI_WVALID $end
$var reg 1 f" S_AXI_WREADY $end
$var wire 1 z! S_AXI_BREADY $end
$var reg 1 g" S_AXI_BVALID $end
$var wire 1 X S_AXI_BRESP [1] $end
$var wire 1 Y S_AXI_BRESP [0] $end
$var reg 4 h" reg_X [3:0] $end
$var reg 4 i" reg_A [3:0] $end
$var reg 1 j" reg_start $end
$var reg 1 k" reg_load $end
$var reg 32 l" captured_awaddr [31:0] $end
$var reg 32 m" captured_araddr [31:0] $end
$var wire 1 n" exp_done $end
$var wire 1 o" exp_P [14] $end
$var wire 1 p" exp_P [13] $end
$var wire 1 q" exp_P [12] $end
$var wire 1 r" exp_P [11] $end
$var wire 1 s" exp_P [10] $end
$var wire 1 t" exp_P [9] $end
$var wire 1 u" exp_P [8] $end
$var wire 1 v" exp_P [7] $end
$var wire 1 w" exp_P [6] $end
$var wire 1 x" exp_P [5] $end
$var wire 1 y" exp_P [4] $end
$var wire 1 z" exp_P [3] $end
$var wire 1 {" exp_P [2] $end
$var wire 1 |" exp_P [1] $end
$var wire 1 }" exp_P [0] $end

$scope module exp_inst $end
$var parameter 3 ~" IDLE $end
$var parameter 3 !# LOAD $end
$var parameter 3 "# CALC $end
$var parameter 3 ## FINISH $end
$var wire 1 n i_clk $end
$var wire 1 o i_rst_n $end
$var wire 1 $# i_load $end
$var wire 1 %# i_start $end
$var wire 1 &# i_X [3] $end
$var wire 1 '# i_X [2] $end
$var wire 1 (# i_X [1] $end
$var wire 1 )# i_X [0] $end
$var wire 1 *# i_A [3] $end
$var wire 1 +# i_A [2] $end
$var wire 1 ,# i_A [1] $end
$var wire 1 -# i_A [0] $end
$var reg 1 .# o_done $end
$var reg 15 /# o_P [14:0] $end
$var reg 3 0# current_state [2:0] $end
$var reg 4 1# reg_A [3:0] $end
$var reg 4 2# reg_X [3:0] $end
$var reg 15 3# reg_P [14:0] $end
$var reg 4 4# counter [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0&
0'
b0 (
0)
0+
b0 O
0P
b0 R
b0 S
0T
0V
xb"
bx c"
xd"
xe"
xf"
xg"
bx h"
bx i"
xj"
xk"
bx l"
bx m"
0.#
b1 /#
b0 0#
b0 1#
b0 2#
b1 3#
b0 4#
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
b1111100100000000000000000000000 !
b1111100100000000000000000000100 "
b1111100100000000000000000001000 #
b1111100100000000000000000001100 $
b1111100100000000000000000010000 %
b100000 b
b100000 c
b111111111 d
b0 e
b1000 f
b1111100100000000000000000000000 g
b1111100100000001111111111111111 h
b1 j
b1 k
b100000 l
b100000 m
b1111100100000000000000000000000 ]"
b1111100100000000000000000000100 ^"
b1111100100000000000000000001000 _"
b1111100100000000000000000001100 `"
b1111100100000000000000000010000 a"
b0 ~"
b1 !#
b10 "#
b11 ##
b111001101110000011000010111001001110100011000010110111000110110 i
x*
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
xL
0N
0M
xQ
xU
xW
0Y
0X
z<"
z;"
z:"
z9"
z8"
z7"
z6"
z5"
z4"
z3"
z2"
z1"
z0"
z/"
z."
z-"
z,"
z+"
z*"
z)"
z("
z'"
z&"
z%"
z$"
z#"
z""
z!"
z~!
z}!
z|!
z{!
z\"
z["
zZ"
zY"
zX"
zW"
zV"
zU"
zT"
zS"
zR"
zQ"
zP"
zO"
zN"
zM"
zL"
zK"
zJ"
zI"
zH"
zG"
zF"
zE"
zD"
zC"
zB"
zA"
z@"
z?"
z>"
z="
0n"
1}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0z!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0o
0n
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
$end
#5
1&
1n
0b"
0d"
b0 c"
b0 m"
0e"
0f"
0g"
b0 h"
b0 i"
0j"
0k"
b0 l"
0*
0L
0Q
0U
0W
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0%#
0$#
#10
0&
0n
#15
1&
1n
#20
1'
0&
1o
0n
#25
1&
1n
b0 /#
0}"
#30
0&
0n
#35
1&
1n
#40
0&
0n
#45
1&
1n
#50
0&
0n
#55
1&
1n
#60
0&
0n
#65
1&
1n
#70
b10 ^
b11 _
b1000 `
b1111100100000000000000000000000 Z
b10 [
0&
0n
#75
1&
1n
b1111100100000000000000000000000 O
1P
b10 R
1T
b1111 S
1V
12!
1W!
1V!
1U!
1T!
1S!
1Q!
1x
1u
1t
1s
1r
1q
1z!
#80
0&
0n
#85
1&
1n
1e"
bz l"
1f"
1Q
1U
#90
0&
0n
#95
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#100
0&
0n
#105
1&
1n
b1111100100000000000000000000100 Z
b11 [
0g"
0V
0W
0z!
#110
0&
0n
#115
1&
1n
b1111100100000000000000000000100 O
1P
b11 R
1T
1V
12!
1R!
1/!
1W!
1z!
#120
0&
0n
#125
1&
1n
1e"
1f"
1Q
1U
#130
0&
0n
#135
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#140
0&
0n
#145
1&
1n
b1111100100000000000000000001000 Z
b1 [
0g"
0V
0W
0z!
#150
0&
0n
#155
1&
1n
b1111100100000000000000000001000 O
1P
b1 R
1T
1V
12!
0Q!
0/!
1.!
1W!
1z!
#160
0&
0n
#165
1&
1n
1e"
1f"
1Q
1U
#170
0&
0n
#175
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#180
0&
0n
#185
1&
1n
b1111100100000000000000000010000 \
0g"
0V
0W
0z!
#190
0&
0n
#195
1&
1n
b1111100100000000000000000010000 (
1)
1+
1s!
1`!
1]!
1\!
1[!
1Z!
1Y!
1x!
1y!
#200
0&
0n
#205
1&
1n
1b"
bz m"
1*
#210
0&
0n
#215
1&
1n
0b"
1d"
0)
0*
1L
0x!
b0 ]
#220
0&
0n
#225
1&
1n
b0 a
0d"
0+
0L
0y!
#230
0&
0n
#235
1&
1n
#240
0&
0n
#245
1&
1n
#250
0&
0n
#255
1&
1n
#260
0&
0n
#265
1&
1n
#270
0&
0n
#275
1&
1n
#280
0&
0n
#285
1&
1n
#290
0&
0n
#295
1&
1n
#300
0&
0n
#305
1&
1n
#310
0&
0n
#315
1&
1n
#320
0&
0n
#325
b11 ^
b10 _
b1001 `
b1111100100000000000000000000000 Z
b11 [
1&
1n
b1111100100000000000000000000000 O
1P
b11 R
1T
1V
12!
1Q!
0.!
1W!
1z!
#330
0&
0n
#335
1&
1n
1e"
1f"
1Q
1U
#340
0&
0n
#345
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#350
0&
0n
#355
1&
1n
b1111100100000000000000000000100 Z
b10 [
0g"
0V
0W
0z!
#360
0&
0n
#365
1&
1n
b1111100100000000000000000000100 O
1P
b10 R
1T
1V
12!
0R!
1/!
1W!
1z!
#370
0&
0n
#375
1&
1n
1e"
1f"
1Q
1U
#380
0&
0n
#385
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#390
0&
0n
#395
1&
1n
b1111100100000000000000000001000 Z
b1 [
0g"
0V
0W
0z!
#400
0&
0n
#405
1&
1n
b1111100100000000000000000001000 O
1P
b1 R
1T
1V
12!
1R!
0Q!
0/!
1.!
1W!
1z!
#410
0&
0n
#415
1&
1n
1e"
1f"
1Q
1U
#420
0&
0n
#425
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#430
0&
0n
#435
1&
1n
0g"
0V
0W
0z!
#440
0&
0n
#445
1&
1n
1)
1+
1x!
1y!
#450
0&
0n
#455
1&
1n
1b"
1*
#460
0&
0n
#465
1&
1n
0b"
1d"
0)
0*
1L
0x!
#470
0&
0n
#475
1&
1n
0d"
0+
0L
0y!
#480
0&
0n
#485
1&
1n
#490
0&
0n
#495
1&
1n
#500
0&
0n
#505
1&
1n
#510
0&
0n
#515
1&
1n
#520
0&
0n
#525
1&
1n
#530
0&
0n
#535
1&
1n
#540
0&
0n
#545
1&
1n
#550
0&
0n
#555
1&
1n
#560
0&
0n
#565
1&
1n
#570
0&
0n
#575
b100 ^
b10000 `
b1111100100000000000000000000000 Z
b100 [
1&
1n
b1111100100000000000000000000000 O
1P
b100 R
1T
1V
12!
0R!
1P!
0.!
1W!
1z!
#580
0&
0n
#585
1&
1n
1e"
1f"
1Q
1U
#590
0&
0n
#595
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#600
0&
0n
#605
1&
1n
b1111100100000000000000000000100 Z
b10 [
0g"
0V
0W
0z!
#610
0&
0n
#615
1&
1n
b1111100100000000000000000000100 O
1P
b10 R
1T
1V
12!
1Q!
0P!
1/!
1W!
1z!
#620
0&
0n
#625
1&
1n
1e"
1f"
1Q
1U
#630
0&
0n
#635
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#640
0&
0n
#645
1&
1n
b1111100100000000000000000001000 Z
b1 [
0g"
0V
0W
0z!
#650
0&
0n
#655
1&
1n
b1111100100000000000000000001000 O
1P
b1 R
1T
1V
12!
1R!
0Q!
0/!
1.!
1W!
1z!
#660
0&
0n
#665
1&
1n
1e"
1f"
1Q
1U
#670
0&
0n
#675
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#680
0&
0n
#685
1&
1n
0g"
0V
0W
0z!
#690
0&
0n
#695
1&
1n
1)
1+
1x!
1y!
#700
0&
0n
#705
1&
1n
1b"
1*
#710
0&
0n
#715
1&
1n
0b"
1d"
0)
0*
1L
0x!
#720
0&
0n
#725
1&
1n
0d"
0+
0L
0y!
#730
0&
0n
#735
1&
1n
#740
0&
0n
#745
1&
1n
#750
0&
0n
#755
1&
1n
#760
0&
0n
#765
1&
1n
#770
0&
0n
#775
1&
1n
#780
0&
0n
#785
1&
1n
#790
0&
0n
#795
1&
1n
#800
0&
0n
#805
1&
1n
#810
0&
0n
#815
1&
1n
#820
0&
0n
#825
b10 ^
b0 _
b1 `
b1111100100000000000000000000000 Z
b10 [
1&
1n
b1111100100000000000000000000000 O
1P
b10 R
1T
1V
12!
0R!
1Q!
0.!
1W!
1z!
#830
0&
0n
#835
1&
1n
1e"
1f"
1Q
1U
#840
0&
0n
#845
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#850
0&
0n
#855
1&
1n
b1111100100000000000000000000100 Z
b0 [
0g"
0V
0W
0z!
#860
0&
0n
#865
1&
1n
b1111100100000000000000000000100 O
1P
b0 R
1T
1V
12!
0Q!
1/!
1W!
1z!
#870
0&
0n
#875
1&
1n
1e"
1f"
1Q
1U
#880
0&
0n
#885
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#890
0&
0n
#895
1&
1n
b1111100100000000000000000001000 Z
b1 [
0g"
0V
0W
0z!
#900
0&
0n
#905
1&
1n
b1111100100000000000000000001000 O
1P
b1 R
1T
1V
12!
1R!
0/!
1.!
1W!
1z!
#910
0&
0n
#915
1&
1n
1e"
1f"
1Q
1U
#920
0&
0n
#925
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#930
0&
0n
#935
1&
1n
0g"
0V
0W
0z!
#940
0&
0n
#945
1&
1n
1)
1+
1x!
1y!
#950
0&
0n
#955
1&
1n
1b"
1*
#960
0&
0n
#965
1&
1n
0b"
1d"
0)
0*
1L
0x!
#970
0&
0n
#975
1&
1n
0d"
0+
0L
0y!
#980
0&
0n
#985
1&
1n
#990
0&
0n
#995
1&
1n
#1000
0&
0n
#1005
1&
1n
#1010
0&
0n
#1015
1&
1n
#1020
0&
0n
#1025
1&
1n
#1030
0&
0n
#1035
1&
1n
#1040
0&
0n
#1045
1&
1n
#1050
0&
0n
#1055
1&
1n
#1060
0&
0n
#1065
1&
1n
#1070
0&
0n
#1075
b101 ^
b11 _
b1111101 `
b1111100100000000000000000000000 Z
b101 [
1&
1n
b1111100100000000000000000000000 O
1P
b101 R
1T
1V
12!
1P!
0.!
1W!
1z!
#1080
0&
0n
#1085
1&
1n
1e"
1f"
1Q
1U
#1090
0&
0n
#1095
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#1100
0&
0n
#1105
1&
1n
b1111100100000000000000000000100 Z
b11 [
0g"
0V
0W
0z!
#1110
0&
0n
#1115
1&
1n
b1111100100000000000000000000100 O
1P
b11 R
1T
1V
12!
1Q!
0P!
1/!
1W!
1z!
#1120
0&
0n
#1125
1&
1n
1e"
1f"
1Q
1U
#1130
0&
0n
#1135
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#1140
0&
0n
#1145
1&
1n
b1111100100000000000000000001000 Z
b1 [
0g"
0V
0W
0z!
#1150
0&
0n
#1155
1&
1n
b1111100100000000000000000001000 O
1P
b1 R
1T
1V
12!
0Q!
0/!
1.!
1W!
1z!
#1160
0&
0n
#1165
1&
1n
1e"
1f"
1Q
1U
#1170
0&
0n
#1175
1&
1n
0e"
0f"
1g"
0P
0T
0Q
0U
1W
02!
0W!
#1180
0&
0n
#1185
1&
1n
0g"
0V
0W
0z!
#1190
0&
0n
#1195
1&
1n
1)
1+
1x!
1y!
#1200
0&
0n
#1205
1&
1n
1b"
1*
#1210
0&
0n
#1215
1&
1n
0b"
1d"
0)
0*
1L
0x!
#1220
0&
0n
#1225
1&
1n
0d"
0+
0L
0y!
#1230
0&
0n
#1235
1&
1n
#1240
0&
0n
#1245
1&
1n
#1250
0&
0n
#1255
1&
1n
#1260
0&
0n
#1265
1&
1n
#1270
0&
0n
#1275
1&
1n
#1280
0&
0n
#1285
1&
1n
#1290
0&
0n
#1295
1&
1n
#1300
0&
0n
#1305
1&
1n
#1310
0&
0n
#1315
1&
1n
#1320
0&
0n
#1325
1&
1n
#1330
0&
0n
#1335
1&
1n
#1340
0&
0n
#1345
1&
1n
#1350
0&
0n
#1355
1&
1n
#1360
0&
0n
#1365
1&
1n
#1370
0&
0n
